version: "3.9"

services:
  zookeeper:
    image: bitnami/zookeeper
    restart: always
    hostname: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - event-sourcing-demo
  kafka:
    image: bitnami/kafka
    hostname: broker
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - "kafka_data:/bitnami"
    networks:
      - event-sourcing-demo
    environment:
      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:9092,PLAINTEXT://:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,EXTERNAL_SAME_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    depends_on:
      - zookeeper

  mongodb:
    image: mongo:5.0
    ports:
      - 27017:27017
    expose:
      - 27017
    volumes:
      - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGO_INITDB_DATABASE=event-sourcing
  mysql:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_DATABASE=event-sourcing
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - '3316:3306'
    volumes:
      - mysql:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  mysql:
    driver: local

networks:
  event-sourcing-demo:
    driver: bridge
   

